{"version":3,"sources":["app.ts","environment.ts","main.ts","greeting/gethelloworldresponse.ts","greeting/greeting.ts","resources/index.ts","/home/elmar/ccvs/hellocoreclr/ui/src/app.html","/home/elmar/ccvs/hellocoreclr/ui/src/css/styles.css","/home/elmar/ccvs/hellocoreclr/ui/src/index.html","/home/elmar/ccvs/hellocoreclr/ui/src/css/toastr.css","/home/elmar/ccvs/hellocoreclr/ui/src/greeting/greeting.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Redirect, NavigationInstruction, Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n    router: Router;\n\n    configureRouter(config: RouterConfiguration, router: Router) {\n        config.title = 'Hello Core Clr!';\n        config.map([\n            { route: '', moduleId: 'greeting/greeting', name: 'home', settings: { roles: [] } }\n        ]);\n\n        this.router = router;\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\"use strict\";\n\nexport class GetHelloWorldResponse {\n    public name: string;\n}\n","import { HttpClient, HttpResponseMessage } from 'aurelia-http-client';\nimport { LogManager } from 'aurelia-framework';\nimport { Logger } from 'aurelia-logging';\nimport { GetHelloWorldResponse } from './gethelloworldresponse';\n\nexport class Greeting {\n    static inject() { return [HttpClient, LogManager]; }\n    private log: Logger;\n    public labelText: string;\n    public inputText: string;\n\n    constructor(private http: HttpClient, private logManager: LogManager) { \n        this.log  = this.logManager.getLogger(\"greeting\");\n    }\n\n    attached() {\n\n    }\n\n    public executeHelloWorld(): void {\n        let name = this.inputText;\n        if (name === undefined || name.length === 0) {\n            this.log.warn(\"No name received. abort.. \");\n            this.labelText = \"\";\n            return;\n        }\n\n        this.log.info(\"We got the following name: \" + name);\n        //toastr.info(\"Working...\");\n\n        this.http.get('api/helloworld/' + name)\n            .then((response: HttpResponseMessage) => {\n                this.log.info(\"Received http code \" + response.statusCode);\n                if (response.isSuccess) {\n                    this.log.info(\"Received data was: \" + response.content.name);\n\n                    //toastr.clear();\n                    //toastr.success(\"HTTP/\" + status);\n                    this.labelText = response.content.name;\n                }\n                else {\n                    this.log.warn(\"Oops... something went wrong.\");\n\n                    //toastr.clear();\n                    //toastr.warning(\"Oops... HTTP/\" + status);\n                    this.labelText = \"\";\n                }\n            });\n    }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null],"sourceRoot":"../src"}